[
  
  {
    "title": "Bem-vindo!",
    "url": "/2025/08/22/bem-vindo.html",
    "date": "22/08/2025",
    "content": "Olá, seja muito bem-vindo ao meu blog pessoal, aqui você terá a oportunidade de conhecer muito sobre tecnologia, linux, produção musical e cultura cinematográfica.\n\nEu sou Raul Dipeas, técnico em informática, músico e cinéfilo.\n\nEstudo e desenvolvo algo em torno do Linux há aproximadamente 15 anos, sou músico já faz mais de 30 anos e aprecio cinema e TV desde sempre.\n\nSou completamente autodidata, tanto na informática quanto na música, tudo que sei, aprendi ao longo dos anos lendo blogs, sites, postagens em fóruns, wikis, etc.\n\nAtravés deste blog, vou compartilhar toda a minha experiência usando Linux na produção musical e indicar as melhores práticas pra que você consiga extrair o máximo possível do sistema, portanto, fique ligado e me siga através do Mastodon, pra saber de tudo que acontece nesse universo do pinguim.\n\nVocê também pode participar dos meus grupos no Telegram:\n\nProdução musical no Linux\n\nGuitarrada do agreste\n\nXubuntu Brasil\n\nA sua participação é muito importante pro engajamento e pra que as postagens sejam frequentes, conto com você!\n\nPS: Enquanto você espera pela próxima postagem, dá uma conferida no meu trabalho musical no YouTube.\n\n\n\n",
    "cover": "https://wallpapers.com/images/hd/welcome-bokeh-green-beach-dmqenpgvpl1qovkc.jpg"
  },
  
  {
    "title": "Em construção!",
    "url": "/aviso/2025/08/20/em-construcao.html",
    "date": "20/08/2025",
    "content": "Este é o meu blog pessoal, no momento eu estou trabalhando pra criar postagens que vão prender a sua atenção e te trazer muito conhecimento.\n\nAguarde, coisas incríveis estão por vir!\n\n\n",
    "cover": "https://www.drsilencio.com.br/wp-content/uploads/2023/10/chapeu-de-construcao-em-cima-de-varios-tijolos-1024x683.jpg"
  },
  
  {
    "title": "Welcome to Jekyll!",
    "url": "/jekyll/update/2025/08/19/welcome-to-jekyll.html",
    "date": "19/08/2025",
    "content": "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.\n\nJekyll requires blog post files to be named according to the following format:\n\nYEAR-MONTH-DAY-title.MARKUP\n\nWhere YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and MARKUP is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.\n\nJekyll also offers powerful support for code snippets:\n\ndef print_hi(name)\n  puts \"Hi, #{name}\"\nend\nprint_hi('Tom')\n#=&gt; prints 'Hi, Tom' to STDOUT.\n\nCheck out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk.\n\n",
    "cover": "https://i0.wp.com/thecurrentga.org/wp-content/uploads/2022/07/DSC_0101-scaled.jpg?fit=2000%2C1213&ssl=1"
  },
  
  {
    "title": "Como personalizar o bash",
    "url": "/guias/2023/04/22/como-personalizar-o-bash.html",
    "date": "22/04/2023",
    "content": "O bash (Bourne Again SHell), é o interpretador de comandos mais comum nas distribuições Linux.\n\nEle é uma interface de linha de comando que permite aos usuários interagirem com o sistema operacional Linux por meio de comandos no terminal.\n\nO bash suporta uma ampla gama de comandos, que podem ser usados para executar tarefas como manipulação de arquivos e diretórios, gerenciamento de processos, automação de tarefas, redirecionamento de entrada/saída, criação de scripts e muito mais.\n\nEle também suporta recursos avançados, como substituição de variáveis, expansão de curingas, controle de fluxo, histórico de comandos e a personalização do ambiente de shell.\n\nEu poderia escrever muita coisa sobre ele, visto que ele já é bastante antigo e existem muitas formas de explorar suas capacidades, porém, vou me ater as minhas personalizações e as explicações sobre a necessidade de cada uma delas, pra que você possa tirar suas próprias conclusões sobre o assunto.\n\nArquivos de configuração do bash\n\nEu uso arquivos separados pra cada personalização e complemento que eu adiciono ao bash, dessa forma, fica mais fácil organizar, ativar e desativar recursos de acordo com a necessidade, tudo isso é feito usando a pasta \"$HOME\"/.bashrc.d, onde eu armazeno todos os scripts.\n\nPra criar essa pasta e fazer com que os scripts sejam carregados, basta executar os comandos abaixo:\nmkdir -p \"$HOME\"/.bashrc.d\nsed -i '/^# bashrc.d/{N;N;N;d;}' \"$HOME\"/.bashrc\ncat &lt;&lt;EOF |tee -a \"$HOME\"/.bashrc&gt;/dev/null\n# bashrc.d\nfor script in \"\\$HOME\"/.bashrc.d/*.bash;do\n\tsource \\$script\ndone\nEOF\n\n\nO que nós fizemos até aqui, além de criar a pasta necessária, foi adicionar algumas linhas ao final do arquivo \"$HOME\"/.bashrc, para que ele busque por scripts com a extensão .bash dentro da pasta \"$HOME\"/.bashrc.d, até esse ponto, nenhuma modificação no comportamento do bash foi implementada, mas já estamos preparados pra elas.\n\nAo longo de quase 2 décadas usando Linux, eu descobri uma série de melhorias que podem ser feitas no bash pra que ele se torne mais fácil de usar, afinal de contas, o terminal nunca é amistoso a primeira vista e quanto mais nós pudermos mitigar essa estranhesa, melhor, não?\n\natuin\n\n\nO primiro dos complementos que eu gostaria de indicar é o atuin, que é um gerenciador de histórico de comandos.\n\nA real necessidade para um complemento como esse, é que por padrão o bash não te dá um histórico completo dos comandos que você já executou anteriormente, sem um programa como o atuin, você tem que digitar um termo e ir pressionando Ctrl+R repetidamente pra navegar no histórico, o que é um pouco cansativo e até confuso na minha perspectiva, com o atuin você preciona Ctrl+R apenas uma vez e daí já pode começar a navegar no histórico usando as setas do teclado, ou se quiser pesquisar por algo, basta começar a escrever a parte do comando que você lembra, ele faz uma busca completa no histórico, é excelente e facilita muito o uso de comandos longos e que você só usa eventualmente, te dando a comodidade de não precisar decorar nada.\n\nPara instalar o atuin no Ubuntu, basta executar os comandos abaixo:\nwget -cq --show-progress \"$(wget -qO- https://api.github.com/repos/ellie/atuin/releases|grep browser_download_url|grep .deb|head -n1|cut -d '\"' -f4)\"\nsudo apt install ./atuin*.deb\nrm atuin*.deb\nwget -qO- \"$HOME\"/.bashrc.d/bash-preexec.sh https://raw.githubusercontent.com/rcaloras/bash-preexec/master/bash-preexec.sh\ncat &lt;&lt;EOF |tee \"$HOME\"/.bashrc.d/atuin.bash&gt;/dev/null\n[[ -f ~/.bashrc.d/bash-preexec.sh ]] &amp;&amp; source ~/.bashrc.d/bash-preexec.sh\neval \"\\$(atuin init bash --disable-up-arrow)\"\nEOF\n\n\nApós a execução dos comandos, basta reiniciar o terminal e pressionar Ctrl+R pra exibir o histórico de comandos com o atuin.\n\nbash line editor (ble.sh)\nO bash line editor, que vamos chamar de ble.sh, pra simplificar, é um complemento que abrange vários recursos diferentes, mas eu vou me ater apenas ao que eu faço uso, que é a sugestão de comandos, ou seja, quando você começar a digitar algo no terminal, com base no seu histórico de comandos, o ble.sh já vai indicar o restante do comando, bastando você pressionar a seta direita do teclado pra autocompletar.\n\nSe você faz um uso intenso do terminal, isso ajuda demais, pois poupa muito tempo na hora de digitar os comandos.\n\nPara instalar o ble.sh no Ubuntu, basta executar os comandos abaixo:\nsudo apt install build-essential git\ngit clone -q --recursive https://github.com/akinomyoga/ble.sh.git\nmake -C ble.sh install PREFIX=\"$HOME\"/.local&gt;/dev/null\ncat &lt;&lt;EOF |tee \"$HOME\"/.bashrc.d/blesh.bash&gt;/dev/null\nsource \"\\$HOME\"/.local/share/blesh/ble.sh\nEOF\ncat &lt;&lt;EOF |tee \"$HOME\"/.blerc&gt;/dev/null\nble-face -s auto_complete fg=238,bg=000\nbleopt complete_auto_delay=300\nEOF\nrm -rf ble.sh*\n\n\nApós a execução dos comandos, basta reiniciar o terminal pra começar a receber as sugestões dos comandos.\n\nfzf &amp; bat\n\n\nO fzf é um comando complementar para vários outros comandos indicados neste guia, mas pra descrever o que ele pode fazer, basicamente ele é um buscador difuso, ou seja, ele é capaz de fazer pesquisas interativas dentro de vários tipos de contexto, é bastante difícil descrever tudo que ele pode fazer, mas posso deixar aqui a descrição do próprio desenvolvedor:\n\n  É um filtro Unix interativo para linha de comando que pode ser usado com qualquer lista; arquivos, histórico de comandos, processos, nomes de host, favoritos, git commits, etc.\n\n\nSei que pode parecer algo confuso de entender, eu mesmo demorei pra assimilar, mas na prática, vamos usar ele pra navegar em arquivos dentro de pastas, com uma previsão do conteúdo para arquivos de texto, o que ajuda bastante na hora de conferir scripts ou anotações em texto puro que você tem guardados numa determinada pasta.\n\nAlém do fzf, nós vamos instalar também o bat, que é responsável pela exibição do conteúdo dos arquivos dentro deste contexto.\n\nPra instalar o fzf e o bat  no Ubuntu, basta executar os comandos abaixo:\nwget -q --show-progress \"$(wget -qO- https://api.github.com/repos/sharkdp/bat/releases|grep browser_download_url|grep amd64.deb|grep -v musl|head -n1|cut -d '\"' -f4)\"\nsudo apt install ./bat*.deb fzf\nrm bat*.deb\ncat &lt;&lt;EOF |sudo tee /usr/local/bin/fzf-dir&gt;/dev/null\n#!/bin/bash\nset -e\n/usr/bin/fzf --preview 'bat --style=numbers --color=always --line-range :500 {}'\nEOF\nsudo chmod +x /usr/local/bin/fzf-dir\n\n\nApós a execução dos comandos, você pode navegar até um diretório que contém arquivos de texto e rodar o comando fzf-dir, daí é só começar a navegar nos arquivos com as setas do teclado, todos os arquivos de texto terão uma previsão ao lado direito.\n\nliquidprompt\n\nO liquidprompt é um tema no estilo powershell/agnoster para o bash.\n\nCom ele, além da visualização melhorada do nome do host, usuário e pasta atual, você tem indicações de estado em pastas de repositório git, por exemplo, o que ajuda bastanta pra saber em que pé anda o desenvolvimento do seu projeto dentro dessa pasta.\n\nPra instalar o liquidprompt no Ubuntu, basta executar os comandos abaixo:\nwget -q --show-progress http://ftp.us.debian.org/debian/pool/main/l/liquidprompt/$(wget -qO- http://ftp.us.debian.org/debian/pool/main/l/liquidprompt/|grep all.deb|tail -n1|cut -d '\"' -f8)\nsudo apt install ./liquidprompt*.deb\nrm liquidprompt*.deb\ncp /usr/share/liquidprompt/liquidpromptrc-dist .config/liquidpromptrc\nsed -i 's/debian.theme/powerline.theme/g' \"$HOME\"/.config/liquidpromptrc\ncat &lt;&lt;EOF |\"$HOME\"/.bashrc.d/liquidprompt.bash&gt;/dev/null\necho \\$- | grep -q i 2&gt;/dev/null &amp;&amp; . /usr/share/liquidprompt/liquidprompt\nlp_theme powerline\nEOF\n\n\nApós a execução dos comandos, basta reiniciar o terminal para que o tema com os novos recursos seja exibido.\n\nmicro\n\n\nO micro é um editor de texto para o terminal, que diferente do nano, por exemplo (que é o editor padrão na maioria das distribuições Linux), usa atalhos comuns como Ctrl+S pra salvar e Ctrl+Q pra sair, só pra citar alguns exemplos, além de não ser necessário usar o sudo pra editar arquivos com permissão de superusuário, a senha de aministrador só é solicitada na hora de salvar o arquivo.\n\nPra instalar o micro no Ubuntu, basta executar os comandos abaixo:\nwget -q --show-progress \"$(wget -qO- https://api.github.com/repos/zyedidia/micro/releases|grep browser_download_url|grep amd64.deb|head -n1|cut -d '\"' -f4)\"\nsudo apt install ./micro*.deb\nrm micro*.deb\nmkdir -p \"$HOME\"/.config/micro\ncat &lt;&lt;EOF |tee \"$HOME\"/.config/micro/settings.json&gt;/dev/null\n{\n\t\"eofnewline\": false,\n}\nEOF\n\n\nApós a execução dos comandos, basta executar o comando micro para começar a editar seus arquivos.\n\nntfy\n\n\nO ntfy é um notificador para comandos demorados no terminal, ou seja, toda vez que você executar um comando que demora bastante tempo pra ser concluído, ao concluir a operação o terminal vai exibir uma notificação na sua área de trabalho ou no seu celular (opcional), pra te indicar que o processo terminou, o tempo mínimo pra notificações pode ser ajustado de acordo com suas necessidades, por padrão ele exibe notificações para comandos que demoram acima de 10s.\n\nPara instalar o ntfy no Ubuntu, basta executar os comandos abaixo:\nsudo apt install libnotify-bin pipx\npipx install --system-site-packages ntfy\ncat &lt;&lt;EOF |tee \"$HOME\"/.bashrc.d/ntfy.bash&gt;/dev/null\nPATH=\"\\$PATH\":\"\\$HOME\"/.local/bin\neval \"\\$(ntfy shell-integration)\"\nEOF\n\n\nApós a execução dos comandos, basta reiniciar o terminal para que as notificações de comandos demorados comecem a ser exibidas.\n\nSe você gostou do conteúdo desta postagem e quer receber mais conteúdos como esse, me siga no Twitter.\n",
    "cover": null
  },
  
  {
    "title": "Respin RDX",
    "url": "/distribui%C3%A7%C3%B5es/2023/04/12/respin-rdx.html",
    "date": "12/04/2023",
    "content": " Respin RDX\n\nO Respin RDX é a minha compilação pessoal dos sabores do Ubuntu.\n\nA base do sistema está otimizada para criação de conteúdo multimídia (áudio, vídeo e imagem), com base nos parâmetros de checagem do rtcqs.\n\nAlguns extras estão inclusos:\n\n\n  \n     CFS Zen tweaks (agendador de tarefas com melhorias de responsividade)\n  \n  \n     ZSwap (gerenciador de memória alternativo)\n  \n  \n     nohang (prevenção de OOM)\n  \n  \n      MESA (drivers mais recentes para GPUs AMD e Intel)\n  \n  \n     ALSA firmware (drivers adicionais para interfaces de áudio)\n  \n  \n     JACK (servidor de áudio de baixa latência)\n  \n  \n     udev-rtirq (regras de alta prioridade para o gerenciamento da interface de áudio)\n  \n  \n     Synaptic (gerenciador de pacotes)\n  \n  \n     nala (interface Python para o APT)\n  \n  \n     Pacstall (repositório de programas para a base Debian, similar ao AUR do Arch Linux)\n  \n  \n     LinuxBrew (gerenciador de pacotes adicional para programas CLI)\n  \n  \n     apt-rollback (ferramenta para reverter pacotes instalados em um período de tempo específico)\n  \n  \n     pipx (instalador de pacotes python com ambientes isolados)\n  \n  \n     Timeshift (ferramenta de backups)\n  \n  \n     Firefox (navegador de internet, binário diretamente do site da Mozilla)\n  \n  \n     Thunderbird (cliente de e-mail, binário diretamente do site da Mozilla)\n  \n  \n     LibreOffice (suíte de escritório atualizada)\n  \n  \n     Papirus (tema de ícones)\n  \n  \n     unrar (suporte adicional para descompactar arquivos)\n  \n  \n     Docklike (superbar para o painel do XFCE)\n  \n  \n     Vala Application Menu (appmenu para o painel do XFCE)\n  \n  \n     CPU-X (informações de hardware)\n  \n  \n     Kitty (terminal baseado em GPU)\n  \n\n\nOs scripts usados nesta compilação, são derivados dos scripts desenvolvidos pelo Marcos Vallim.\n\nDownload:\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "cover": null
  },
  
  {
    "title": "Instalação de programas autoatualizáveis",
    "url": "/guias/2023/04/11/instala%C3%A7%C3%A3o-de-programas-autoatualiz%C3%A1veis.html",
    "date": "11/04/2023",
    "content": "Na postagem sobre Instalação de programas no Ubuntu, eu abordei vários métodos de instalação diferentes, porém, existe um método específico que não foi abordado, porque eu gostaria de fazer uma postagem específica sobre, com mais detalhes sobre o processo e suas possibilidades.\n\nExistem diversos programas que são fornecidos diretamente pelos desenvolvedores, num formato autoatualizável, ou seja, o programa se atualiza sozinho, sem nenhuma necessidade de interação do usuário, toda vez que você abrir o programa, vai estar usando a última versão, inevitavelmente.\n\n Firefox\n\nO Firefox é um programa fornecido nesse formato, você baixa um arquivo compactado .tar direto do site da Mozilla, abre o programa e pronto, já garante que estará sempre na última versão do navegador.\n\nToda vez que você abre o navegador, ele faz uma checagem em segundo plano, pra identificar se existe alguma versão mais nova, caso haja, ele baixa e atualiza automaticamente, sem a necessidade de nenhum tipo de interação, apenas uma pequena janela é exibida, informando sobre o processo, que costuma ser bastante rápido.\n\nTalvez, você possa não ter o conhecimento necessário pra fazer uma instalação adequada do Firefox nesse formato, então vou deixar aqui uma sequência de comandos que vocẽ pode usar pra fazer isso de forma simplificada:\nwget -cO firefox-latest-linux64-pt-br.tar.bz2 \"https://download.mozilla.org/?product=firefox-latest&amp;os=linux64&amp;lang=pt-BR\"\ntar fjx firefox-latest-linux64-pt-br.tar.bz2\nsudo rm -r /opt/firefox\nsudo mkdir -p /opt/firefox\nsudo chmod 777 -R /opt/firefox\nmv firefox/* /opt/firefox/\nrm -r firefox firefox-latest-linux64-pt-br.tar.bz2\nsudo mkdir -p /usr/local/bin /usr/local/share/applications /usr/local/share/pixmaps\nsudo ln -fs /opt/firefox/firefox /usr/local/bin/firefox\nsudo ln -fs /opt/firefox/browser/chrome/icons/default/default128.png /usr/local/share/pixmaps/firefox.png\ncat &lt;&lt;EOF |sudo tee /usr/local/share/applications/firefox.desktop&gt;/dev/null\n[Desktop Entry]\nVersion=1.0\nName=Firefox\nComment=Navegue na internet\nGenericName=Navegador de internet\nKeywords=Internet;WWW;Browser;Web;Explorer\nExec=MOZ_USE_XINPUT2=1 firefox %u\nTerminal=false\nX-MultipleArgs=false\nType=Application\nIcon=firefox\nCategories=GNOME;GTK;Network;WebBrowser;\nMimeType=text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;x-scheme-handler/chrome;video/webm;application/x-xpinstall;\nStartupNotify=true\n\nActions=new-window;new-private-window;\n\n[Desktop Action new-window]\nName=Abrir uma nova janela\nExec=firefox -new-window\n\n[Desktop Action new-private-window]\nName=Abrir uma nova janela no modo privado\nExec=firefox -private-window\nEOF\n\n\nApós a execução dos comandos, quando abrir o navegador pela primeira vez, se estiver usando o ambiente gráfico GNOME com o tema Adwaita, pode notar que o visual dele não é totalmente integrado ao ambiente gráfico, por conta disso, pode querer instalar um tema para que o Firefox se integre melhor ao ambiente gráfico, eu recomendo o uso deste tema.\n\nBasta fechar o navegador e rodar o comando abaixo:\ncurl -s -o- https://raw.githubusercontent.com/rafaelmardojai/firefox-gnome-theme/master/scripts/install-by-curl.sh|bash\n\n\n Thunderbird\n\nO Thunderbird é um cliente de email também desenvolvido pela Mozilla e assim como o Firefox, também é fornecido para instalação através de um arquivo compactado .tar, que basta ser extraído para que o programa seja executado sempre na última versão disponível.\n\nPara instalar o Thunderbird da forma mais adequada, basta executar os comandos abaixo:\nwget -cO thunderbird-latest-linux64-pt-br.tar.bz2 \"https://download.mozilla.org/?product=thunderbird-latest&amp;os=linux64&amp;lang=pt-BR\"\ntar fjx thunderbird-latest-linux64-pt-br.tar.bz2\nsudo rm -r /opt/thunderbird\nsudo mkdir -p /opt/thunderbird\nsudo chmod 777 -R /opt/thunderbird\nmv thunderbird/* /opt/thunderbird/\nrm -r thunderbird thunderbird-latest-linux64-pt-br.tar.bz2\nsudo mkdir -p /usr/local/bin /usr/local/share/applications /usr/local/share/pixmaps\nsudo ln -fs /opt/thunderbird/thunderbird /usr/local/bin/thunderbird\nsudo ln -fs /opt/thunderbird/chrome/icons/default/default128.png /usr/local/share/pixmaps/thunderbird.png\ncat &lt;&lt;EOF |sudo tee /usr/local/share/applications/thunderbird.desktop&gt;/dev/null\n[Desktop Entry]\nEncoding=UTF-8\nName=Thunderbird\nComment=Envie e receba e-mails com o Thunderbird\nGenericName=Cliente de e-mail\nKeywords=Email;E-mail;Newsgroup;Feed;RSS\nExec=MOZ_USE_XINPUT2=1 thunderbird %u\nTerminal=false\nX-MultipleArgs=false\nType=Application\nIcon=thunderbird\nCategories=Application;Network;Email;\nMimeType=x-scheme-handler/mailto;application/x-xpinstall;\nStartupNotify=true\nActions=Compose;Contacts\n\n[Desktop Action Compose]\nName=Compor uma nova mensagem\nExec=thunderbird -compose\n\n[Desktop Action Contacts]\nName=Contatos\nExec=thunderbird -addressbook\nEOF\n\n\n Blender\n\nO Blender é um programa até um pouco difícil de descrever, tão vasta é a sua abrangência, ele realmente pode fazer muita coisa e brilha em várias áreas distintas, mas vamos nos ater as funções mais populares, que são modelagem 3D e edição de vídeo.\n\nA maioria dos tutoriais que você vai encontrar na internet sobre o Blender, vão abranger esses dois perfis de uso, ele realmente é muito poderoso nessas áreas e não fica devendo pra nenhum outro programa similar, você só precisa dedicar um tempo pra aprender, pois a curva de aprendizado pode ser extensa, dependendo do seu nível de conhecimento.\n\nAgora voltando ao tema da postagem, o Blender seria uma pequena trapaça da minha parte, já que ele não se atualiza sozinho, porém, ele tem um sistema de atualização muito parecido com o Firefox, ele procura por atualizações toda vez que você abre o programa, a única diferença é que ele não instala automaticamente, somente um pequeno aviso é exibido pra te informar, o que eu acho até mais seguro, visto que o Blender costuma trazer muitas melhorias e novos recursos a cada nova atualização.\n\nDesse modo, pra instalar e também sempre que você quiser atualizar, basta executar os comandos abaixo:\nBLENDER_VER=$(wget -qO- https://ftp.nluug.nl/pub/graphics/blender/release|grep Blender3.|tail -n1|cut -d \\\" -f6)\nBLENDER_FILE=$(wget -qO- https://ftp.nluug.nl/pub/graphics/blender/release/\"$BLENDER_VER\"|grep .tar.xz|tail -n1|cut -d \\\" -f6)\nwget -c https://ftp.nluug.nl/pub/graphics/blender/release/\"$BLENDER_VER\"\"$BLENDER_FILE\"\ntar -xf blender*.tar.xz\nsudo mkdir -p /opt/blender\nsudo chmod 777 /opt/blender\nsudo mv blender*/* /opt/blender/\nrm -r blender*/ blender*.tar.xz\nsudo mkdir -p /usr/local/bin /usr/local/share/applications /usr/local/share/pixmaps\nsudo ln -sf /opt/blender/blender /usr/local/bin/blender\nsudo cp /opt/blender/blender.desktop /usr/local/share/applications/blender.desktop\nsudo ln -sf /opt/blender/blender.svg /usr/local/share/pixmaps/blender.svg\n\n\nCaso você esteja planejando usar o Blender para edição de vídeo, pode ser que você queira usar o Audacity como complemento para expandir as possibilidades, visto que o Blender não é tão abrangente no segmento de áudio.\n\nVocê pode instalar o Audacity e a integração com o Blender de forma simplificada, usando os comandos abaixo:\nsudo apt install audacity\nmkdir -p \"$HOME\"/.audacity-data/Theme\nwget -cO \"$HOME\"/.audacity-data/Theme/ImageCache.png https://github.com/visoart/audacity-themes/raw/master/themes/dark-blue/ImageCache.png\nwget -c https://github.com/tin2tin/audacity_tools_for_blender/archive/main.zip\nmkdir -p \"$HOME\"/.config/blender/\"$(find /opt/blender/* -type d|head -n1|sed \"s@/opt/blender/@@g\")\"/scripts/addons/\nunzip audacity_tools_for_blender-main.zip -d \"$HOME\"/.config/blender/\"$(find /opt/blender/* -type d|head -n1|sed \"s@/opt/blender/@@g\")\"/scripts/addons/\nrm audacity_tools_for_blender-main.zip\n\n\n LibreOffice\n\nO LibreOffice, talvez seja a suíte office de código aberto mais popular nos dias atuais, existem muitas empresas que fazem uso profissional dele, além de inúmeros tutoriais, internet afora, é uma suíte completa.\n\nAssim como os demais programas apresentados nesta postagem, ele tem um método de instalação autoatualizável, porém, por conta do nível de complexidade, eu prefiro não recomendar ele aqui, visto que a chance de você instalar errado e ter problemas durante o uso, é grande.\n\nDesse modo, vou aproveitar a deixa pra indicar outra forma comum de instalar programas no Ubuntu e ter sempre a última versão disponível, que é usando repositórios adicionais e no caso do LibreOffice, vamos usar um PPA.\n\nCaso tenha não tenha sido subentendido, vou tentar explicar de forma clara como funcionam os repositórios e quais as melhores práticas pra usar repositórios de terceiros.\n\nRepositórios são endereços na internet, onde os pacotes de instalação dos programas são hospedados e indexados de uma forma organizada, para que os gerenciadores de pacotes das distribuições possam encontrá-los de forma imediata.\n\nEntendido esse fator, todas as distribuições tem seus repositórios próprios, onde ficam hospedados os programas que vem na instalação padrão e também pacotes de programas adicionais, que podem ser instalados posteriormente, com a curadoria de quem desenvolve a distribuição.\n\nQuando você adiciona um repositório de terceiro, pode haver incompatibilidade de versão dos pacotes ou das dependências dos mesmos, por isso a Canonical lançou o Launchpad, pra garantir que os pacotes disponibilizados através dos repositórios hospedados nele, fossem compatíveis com as versões do Ubuntu para os quais os pacotes são disponibilizados.\n\nPor conta disso, mesmo ainda sendo possível que aconteça essa incompatibilidade de versões de pacotes e dependências, essa margem de erro foi drasticamente reduzida, sendo possível afirmar que é seguro usar repositórios PPA hospedados no Launchpad.\n\nSó vale ressaltar que é sempre bom conferir os pacotes disponíveis no repositório antes de adicionar ele ao seu sistema, por garantia.\n\nFinalmente, sem mais delongas, você pode instalar o LibreOffice atualizado no Ubuntu com os comandos abaixo:\nsudo add-apt-repository ppa:libreoffice/ppa\nsudo apt update\nsudo apt upgrade\n\n\nSe você gostou do conteúdo desta postagem e quer receber mais conteúdos como esse, me siga no Twitter.\n",
    "cover": null
  },
  
  {
    "title": "Instalação de programas no Ubuntu",
    "url": "/guias/2023/04/11/instala%C3%A7%C3%A3o-de-programas-no-ubuntu.html",
    "date": "11/04/2023",
    "content": "O Ubuntu, assim como todas as demais distribuições Linux, suporta uma grande variedade de formas pra instalar novos programas, dentre as mais simples como dar alguns cliques na central de programas, até a compilação de um programa diretamente do código fonte, passando por diversas outras.\n\nDentre as formas mais populares, existem os pacotes, que são arquivos compactados, com o conteúdo dos programas dentro, possibilitando a instalação com poucos cliques.\n\nEsses pacotes podem ser disponibilizados através dos repositórios do Ubuntu ou de repositórios de terceiros, permitindo dessa forma que você acompanhe as atualizações assim que novas versões estiverem disponíveis, mas, também podem ser disponibilizados diretamente através de páginas na internet, sem a possibilidade de receber atualizações automaticamente.\n\nSeguindo esse conceito, vou listar alguns métodos mais populares de instalação de programas para o Ubuntu, descrevendo suas possibilidades e dando minhas recomendações sobre o potencial uso de cada um deles.\n\n Synaptic\n\nO Synaptic é um gerenciador de pacotes no formato .deb e através dele é possível instalar programas disponíveis nos repositórios que estão configurados na sua instalação do Ubuntu, sejam eles os repositórios padrão do Ubuntu, PPAs do Launchpad ou repositórios de terceiros.\n\nEle é um frontend para o apt e disponibiliza praticamente todas as suas funções através de uma interface gráfica.\n\n\n\nNa minha opinião, a real vantagem do Synaptic sobre outras centrais de instalação de programas disponíveis para o Ubuntu, é que ele lista absolutamente todos os pacotes disponíveis nos repositórios da sua instalação, enquanto a maioria das demais centrais de programas, listam apenas programas que contém lançadores com ícones, ou seja, programas que você usa na linha de comando, bibliotecas de compatibilidade, entre outros, não são listados por elas, o que torna o Synaptic muito mais abrangente.\n\n deb-get\n\nConforme eu citei, existem programas que não são disponibilizados através de um repositório, desse modo, você não tem como acompanhar as atualizações desse programa de forma automática, assim que novas versões forem disponibilizadas pelo desenvolvedor, é justamente nesse caso que o deb-get pode ser uma boa opção, visto que ele disponibiliza a instalação e atualização desses programas diretamente das páginas onde eles são disponibilizadas, te poupando esse tempo de verificar manualmente.\n\nO deb-get é um programa feito para linha de comando, porém, ele possui uma interface gráfica desenvolvida por terceiros que facilita o seu uso, se chama Deborah.\n\n\n\nO deb-get é uma boa opção pra instalar programas sem a necessidade de adicionar repositórios ao sistema, visto que ele mesmo faz esse processo quando necessário, vale a pena dar uma conferida na página do programa pra saber todos os programas que ele disponibiliza, são diversos.\n\n Pacstall\n\nO Pacstall faz a instalação dos programas através de receitas, que compila diretamente do código fonte a maioria dos programas disponíveis na sua lista.\n\nDisponível apenas para o uso através da linha de comando, ele não possui nenhuma interface gráfica até o momento.\n\nEle é fortemente inspirado no AUR do Arch Linux.\n\nNesta página você pode conferir todos os programas que ele disponibiliza.\n\n AppImage\n\nO formato AppImage é bastante conveniente, porque você não precisa necessariamente instalar, basta baixar o pacote, dar permissão de execução e abrir o programa, ele já vem com todas as dependências necessárias pra execução do programa embutidas no pacote.\n\n\n\nConfesso que tenho um pouco de resistência a usar programas assim, porque eles tem menos integração com o sistema do que programas instaláveis através de pacotes .deb, mas eventualmente eles acabam sendo a única opção viável.\n\n Flatpak e  Snap\n\nEu resolvi englobar esses dois pacotes na mesma descrição, porque apesar de eles terem diferenças significativas, o resultado final é muito próximo.\n\nAssim com o AppImage, o Flatpak e o Snap são formatos que vizam carregar todas as depenências necessárias pros programas empacotados nesses formatos, tornando a instalação desses programas universal, ou seja, tecnicamente são suportados em qualquer distribuição.\n\nEu não sou adepto, porque ambos tem uma série de problemas que no meu ponto de vista não justifica o seu uso, até o presente momento.\n\nSnaps costumam ser lentos, ter problemas de compatibilidade de temas, além de serem pacotes com tamanho consideravelmente maior do que os .deb tradicionais.\n\nFlatpaks instalam uma série de dependências adicionais, que são usadas de forma compartilhada entre os programas, o que é até um ponto positivo, porém, dependendo dos programas que você precisar, pode ser que você tenha mais de uma versão dessas dependências, que no meu ponto de vista, é uma redundância, mas os desenvolvedores justificam isso como uma certificação de que o programa vai rodar em qualquer distro.\n\nA leitura que eu faço desses empacotamentos mais modernos, é que eles foram criados pra aumentar o hype de empresas maiores, com a premissa de que são universais e no caso dos snaps, podem até carregar código proprietário.\n\nAté a data desta postagem, eles não são relevantes ou necessários pra mim, prefiro compilar programas direto do código fonte, mas esse pode não ser o seu caso.\n\nSe você gostou do conteúdo desta postagem e quer receber mais conteúdos como esse, me siga no Twitter.\n",
    "cover": null
  },
  
  {
    "title": "Instalação de drivers no Ubuntu",
    "url": "/guias/2023/04/09/instala%C3%A7%C3%A3o-de-drivers-no-ubuntu.html",
    "date": "09/04/2023",
    "content": "Drivers são programas que determinam como seus dispositivos vão se comunicar com o restante do sistema, ou seja, são eles que determinam os melhores caminhos pra extrair o máximo possível de tudo que está na parte física do seu computador.\n\nTer os drivers corretos instalados no seu sistema é fundamental para o bom funcionamento do sistema, então, nesta postagem eu vou te mostrar como ter as últimas versões dos drivers de som e vídeo mais importantes que você vai precisar.\n\n MESA\n\nO driver MESA é responsável por todos os dispositivos de vídeo da Intel, da AMD e de várias outras desenvolvedoras, ou seja, sua abrangência cobre praticamente qualquer dispositivo de vídeo que possa estar utilizando.\n\nPor padrão, ele já está incluso no núcleo do Linux, porém, no caso do Ubuntu, dependendo da versão que você estiver usando, pode ser que o driver MESA não esteja na última versão disponível, mas ele pode ser facilmente atualizado.\n\nBasta executar os comandos abaixo:\nsudo add-apt-repository ppa:kisak/kisak-mesa\nsudo apt update\nsudo apt upgrade\n\nApós a atualização, é necessário reiniciar o sistema para que os novos drivers entrem em funcionamento.\n\n NVIDIA\n\nOs dispositivos de vídeo da NVIDIA funcionam usando o driver MESA, porém, com recursos limitados, infelizmente o código fonte dos drivers da NVIDIA não está disponível para ser incluído no MESA como as demais empresas fazem.\n\nDessa forma, pra que você tenha o driver mais atual instalado, você pode executar o comando abaixo:\nif [[ -n $(lspci |grep NVIDIA|cut -d: -f3) ]]\nthen\n    echo 'Sua GPU é NVIDIA'\n    (lspci |grep NVIDIA|cut -d: -f3|cut -d ' ' -f4|head -n1)\n    sudo add-apt-repository ppa:graphics-drivers/ppa\n    sudo apt install \"$(apt search nvidia-driver 2&gt;/dev/null|grep nvidia-driver|grep -v open|grep -v server|cut -d '/' -f1|tail -n1)\"\n    cat &lt;&lt;EOF |sudo tee /usr/local/bin/prime-run&gt;/dev/null\n#!/bin/sh\nset -e\n__NV_PRIME_RENDER_OFFLOAD=1 \\\n__VK_LAYER_NV_optimus=NVIDIA_only \\\n__GLX_VENDOR_LIBRARY_NAME=nvidia \\\nexec \"\\$@\"\nEOF\n    sudo chmod +x /usr/local/bin/prime-run\nelse\n\techo 'Sua GPU não é NVIDIA'\nfi\n\n\nApós a atualização, é necessário reiniciar o sistema para que os novos drivers entrem em funcionamento.\n\n ALSA firmware\n\nAssim como o MESA abrange uma enorme quantidade de dispositivos de vídeo, o ALSA também abrange uma quantidade enorme de dispositivos de áudio, desde dispositivos integrados em placas mãe, até dispositivos USB, entre outros.\n\nPorém, da mesma forma que o MESA, no caso do Ubuntu, pode ser que ele não esteja disponível na última versão, mas ele pode ser facilmente atualizado com o comando abaixo:\nwget -q --show-progress http://ppa.launchpad.net/kxstudio-debian/libs/ubuntu/pool/main/a/alsa-firmware/$(wget -qO- http://ppa.launchpad.net/kxstudio-debian/libs/ubuntu/pool/main/a/alsa-firmware/|grep amd64.deb|cut -d '\"' -f8)\nsudo apt install ./alsa-firmware*.deb\n\n\nApós a atualização, é necessário reiniciar o sistema para que os novos drivers entrem em funcionamento.\n\n JACK\n\nO JACK é um servidor de áudio que se faz necessário no caso de você precisar trabalhar com áudio em baixa latência, em aplições musicais ou de edição avançada de áudio.\n\nAtravés dele, é possível alcançar latências baixíssimas e pra citar um exemplo, eu obtive algo em torno de 5 milissegundos nos programas de produção musical com os quais trabalho, o que é um valor significativamente baixo, visto que em teoria, qualquer valor abaixo de 8 milissegundos já é impercetível aos ouvidos humanos.\n\nPor padrão, ele não vem instalado no Ubuntu e a maioria dos tutoriais que você vai encontrar, não abragem uma instalação dos complementos adequados.\n\nDesse modo, execute os comandos abaixo pra uma instalação mais adequada:\nsudo add-apt-repository -y ppa:ubuntustudio-ppa/backports\necho 'jackd2 jackd/tweak_rt_limits string true'|sudo debconf-set-selections&gt;/dev/null\nsudo apt install --no-install-recommends -y jackd2\n\n\nVocê pode conferir a postagem sobre Produção musical no Linux para mais detalhes de uso e complementos para o JACK.\n\n udev-rtirq\n\nO udev-rtirq é um script que configura o sistema para alta prioridade nos dispositivos de áudio, ou seja, o processamento do sistema vai primeiro para os dispositivos de áudio e depois pros demais processos em execução, o que gera uma maior estabilidade em aplicações profissionais de áudio.\n\nPara instalar o udev-rtirq basta executar os comandos abaixo:\nsudo apt install build-essential git\ngit clone -q https://github.com/jhernberg/udev-rtirq\ncd udev-rtirq\nmake install\ncd ..\nrm -r udev-rtirq\n\nApós a atualização, é necessário reiniciar o sistema para que o novo gerenciamento entre em funcionamento.\n\n\n  Lembrando que todas as sugestões contidas nesta postagem, podem ser percebidas de forma subjetiva, ou seja, alguns usuários vão conseguir identificar onde elas fizeram efeito, enquanto outros não conseguirão ter essa mesma percepção.\n\n\nSe você gostou do conteúdo desta postagem e quer receber mais conteúdos como esse, me siga no Twitter.\n\n",
    "cover": null
  },
  
  {
    "title": "Melhore o desempenho do Ubuntu",
    "url": "/guias/2023/04/08/melhore-o-desempenho-do-ubuntu.html",
    "date": "08/04/2023",
    "content": " Ubuntu\n\nO Ubuntu é uma distribuição excelente, pois nele é possível executar todos os tipos de tarefas relacionadas as nossas demandas atuais.\n\nVocê pode assistir um vídeo em alta resolução no YouTube, pra passar o tempo, por exemplo, ou desenvolver um site, usando o VS Code enquanto ouve uma música agradável no Spotify, pra citar outras possibilidades.\n\nAcho que podemos dizer que o Ubuntu está preparado pra todas as nossas necessidades de uso, atualmente, entretenimento, como jogos, filmes e música, trabalho, como programação, edição de vídeo e produção musical, entre outras infinitas possibilidades.\n\nMas algo que sempre deixa todo usuário com uma pulga atrás da orelha é se existe alguma forma de extrair mais do sistema, fazendo com que ele entregue uma maior performance, possibilitando rodar mais programas em simultâneo ou abrir os programas necessários com maior velocidade e é justamente aí que esse guia vai te mostrar as possibilidades e explicar como aplicar cada uma delas.\n\nPor ser um sistema que busca entregar estabilidade, ele contém uma série de valores de configuração padrão, que abrangem esse conceito, ou seja, vão valor conservadores e que vão funcionar bem pra maioria dos usuários, porém, eles podem ser reconfigurados pra entregar uma performance superior, ainda de forma segura.\n\n Mainline\n\nA primeira das modificações sugeridas, é utilizar uma versão mais nova do núcleo do sistema, já que ele é a base pra que todo o restante funcione corretamente.\n\nA própria Canonical, empresa que desenvolve o Ubuntu, disponibiliza essa atualização pra ser instalada manualmente pelo usuário e pra facilitar esse processo e as atualizações futuras nós podemos usar a ferramenta mainline.\n\nO mainline pode ser instalado com os seguintes comandos:\nsudo add-apt-repository ppa:cappelikan/ppa\nsudo apt install mainline\nsudo mainline --install-latest\n\n\nApós ter instalado a última versão do núcleo do sistema através do mainline, você deve reiniciar o sistema e se tudo correu como esperado, depois de um tempo você pode remover as versões antigas do núcleo do sistema e liberar algum espaço em disco.\n\nPara isso, basta utilizar o comando:\nsudo find /boot -name \"*vmlinuz-*\"|grep -v \"$(uname -r)\"|sed 's@/boot/vmlinuz@linux-*@g'|sed 's/-generic/\\*/g'|xargs -o sudo apt autoremove --purge\n\n\n CFS Zen tweaks\n\nA próxima otimzação que podemos fazer no Ubuntu, é no gerenciamento de processos, para trazer uma maior responsividade ao sistema e isso pode ser melhorado usando o CFS Zen tweaks, que melhora a gestão dos processos do sistema, focando exclusivamente na responsividade, ou seja, dando prioridade aos processos relacionados com a interação direta do usuário, reduzindo a prioridade de processos em segundo plano, que muitas vezes você nem sabe que estão sendo executados.\n\nPara instalar o CFS Zen tweaks, basta executar os comandos abaixo:\nwget -q --show-progress \"$(wget -qO- https://api.github.com/repos/igo95862/cfs-zen-tweaks/releases|grep browser_download_url|grep .deb|head -n1|cut -d '\"' -f4)\"\nsudo apt install ./cfs-zen-tweaks*.deb\nsystemctl enable set-cfs-tweaks.service\nsystemctl start set-cfs-tweaks.service\n\n\nNão é necessário reiniciar, os resultados já são imediatos.\n\n ZSwap\n\nOutra melhora que é possível fazer no Ubuntu sem grandes dificuldades, mas que confunde muitos usuários, é ajustar o gerenciamento da memória de troca, popularmente conhecida como swap.\n\nAlguns usuários preferem usar ela em uma partição separada do disco, mas por padrão, o Ubuntu cria um arquivo na partição do sistema e escreve os dados diretamente nele.\n\nPorém, o processo de escrita e leitura, tanto na partição quanto nesse arquivo, podem ser um pouco lentos, dependendo da capacidade de processamento, leitura e escrita do seu dispositivo de armazenamento e para melhorar essa gestão, é possível fazer uso de uma parte da memória RAM, que tem uma velocidade de escrita e leitura muito maior do que qualquer dispositivo de armazenamento que você possa estar usando.\n\nPodemos fazer essa modificação no gerenciamento da memória de troca, utilizando o ZSwap, que já é nativo no sistema, sendo necessário apenas ativá-lo.\n\nVocê pode fazer isso com os comandos abaixo:\nRAM=`cat /proc/meminfo|grep MemTotal|cut -d ' ' -f9`\nsudo swapoff /swapfile\nsudo fallocate -l $RAM /swapfile\nsudo dd if=/dev/zero of=/swapfile bs=1024 count=$RAM status=progress\nsudo chmod 600 /swapfile\nsudo mkswap /swapfile\nsudo swapon /swapfile\nsudo sed -i 's/quiet splash/quiet splash zswap.enabled=1 zswap.compressor=lz4/g' /etc/default/grub\nsudo update-grub\necho lz4|sudo tee -a /etc/initramfs-tools/modules&gt;/dev/null\necho lz4_compress|sudo tee -a /etc/initramfs-tools/modules&gt;/dev/null\nsudo update-initramfs -u -k all\n\n\nApós a execução dos comandos, é necessário reinciar para que o novo sistema de gerenciamento de memória seja ativado.\n\n nohang\n\nPor fim, a última modifiacação sugerida para melhorar a responsividade do sitema é o uso do programa nohang, que serve justamente pra fechar processos inativos durante um determinado período, liberando o processador pra processos relacionados a interação direta do usuário.\n\nO nohang garante que um espaço mínimo da memória esteja sempre disponível, impedindo que o sistema trave por falta de memória, por exemplo.\n\nVocê pode instala-lo com o comando abaixo:\nsudo apt install nohang\n\n\nNão é necessário reiniciar, os efeitos são imediatos.\n\n\n  Lembrando que todas as sugestões contidas nesta postagem, podem ser percebidas de forma subjetiva, ou seja, alguns usuários vão conseguir identificar onde elas fizeram efeito, enquanto outros não conseguirão ter essa mesma percepção.\n\n\nSe você gostou do conteúdo desta postagem e quer receber mais conteúdos como esse, me siga no Twitter.\n",
    "cover": null
  },
  
  {
    "title": "Produção musical no Linux",
    "url": "/guias/2023/04/07/produ%C3%A7%C3%A3o-musical-no-linux.html",
    "date": "07/04/2023",
    "content": "\n\n\n\n\nO Linux é um sistema operacional bastante abrangente (assim como o Windows e o MacOS) e uma de suas infinitas possibilidade é a produção musical.\n\nAtravés deste guia eu vou compartilhar alguns conhecimentos que obtive ao longo da última década(ou um pouco mais de tempo).\n\nO ponto de partida, sem dúvidas, é escolher uma distribuição que seja suficientemente completa e tenha o suporte necessário de tudo que vamos precisar pra trabalhar com música.\n\nA minha escolha da vez é o Ubuntu.\n\nSe você gosta deste tema e quer conversar com outros músicos que também usam Linux, acesse o nosso grupo no Telegram.\n\n Ubuntu\n\nO Ubuntu é uma distribuição baseada no Debian, que por ser uma das distribuições mais comentadas na internet, atrai a atenção de muitos usuários.\n\nIsso se dá pelo fato de que o Debian é uma das distribuições mais antigas ainda em atividade e por isso, é possível encontrar muito conteúdo sobre ele na internet.\n\nNeste guia eu vou utilizar o Kubuntu, mas todos os comandos indicados são compatíveis com qualquer um dos sabores do Ubuntu.\n\n\n\n rtcqs\n\nO rtcqs é um checador de configurações do sistema, necessário pra checar se todas as configurações de desempenho já estão setadas corretamente, garantindo que o sistema tenha o máximo de desempenho possível com os programas de áudio.\n\n\n\nAs checagens indicadas se baseiam nas recomendações da Wiki do LinuxAudio.\n\n📦 Instalação\nsudo apt install pipx python3-tk\npipx install rtcqs\nmkdir -p \"$HOME\"/.local/share/{applications,icons}\nwget -qO \"$HOME\"/.local/share/applications/rtcqs.desktop https://github.com/autostatic/rtcqs/raw/main/rtcqs.desktop\nsed -i \"s@Exec=rtcqs_gui@Exec=$HOME/.local/bin/rtcqs_gui@g\" \"$HOME\"/.local/share/applications/rtcqs.desktop\nwget -qO \"$HOME\"/.local/share/icons/rtcqs.svg https://github.com/autostatic/rtcqs/raw/main/rtcqs_logo.svg\n\n\n🔧 Configuração\nsudo usermod -aG audio \"$USER\"\ncat &lt;&lt;EOF |sudo tee /etc/sysctl.d/swappiness.conf&gt;/dev/null\nvm.swappiness = 10\nEOF\ncat &lt;&lt;EOF |sudo tee /etc/default/grub.d/cmdline-linux-default.cfg&gt;/dev/null\nGRUB_CMDLINE_LINUX_DEFAULT=\"cpufreq.default_governor=performance mitigations=off preempt=full quiet splash threadirqs\"\nEOF\nsudo update-grub\nsudo wget -qO /etc/udev/rules.d/99-cpu-dma-latency.rules https://raw.githubusercontent.com/Ardour/ardour/master/tools/udev/99-cpu-dma-latency.rules\nsystemctl --user disable xdg-desktop-portal\nsystemctl --user mask xdg-desktop-portal\nsudo systemctl mask xdg-desktop-portal\n\n\n udev-rtirq\n\nO udev-rtirq é um script que adiciona regras de gerenciamento de hardware ao sistema, que garantem alta prioridade no gerenciamento da interface de áudio.\n\n📦 Instalação\nsudo apt install build-essential git\ngit clone -q https://github.com/jhernberg/udev-rtirq\ncd udev-rtirq\nsudo make install\ncd ..\nrm -r udev-rtirq\n\n\n XanMod\n\nO XanMod é o núcleo de sistema recomendado para este contexto, por conter uma série de patches e otimizações que contribuem para o melhor desempenho de programas que são executados através do WINE, além de contribuir de forma decisiva para uma baixíssma incidência de xruns(que ocasionam artefatos sonoros, como clicks e pops no áudio) ao utilizar programas de áudio de baixa latência.\n\n📦 Instalação\nwget -cq https://dl.xanmod.org/check_x86-64_psabi.sh\nchmod +x check_x86-64_psabi.sh\nwget -cq --show-progress https://dl.xanmod.org/xanmod-repository.deb\nsudo apt install --no-install-recommends ./xanmod-repository.deb\nsudo apt update\nsudo apt install linux-firmware linux-xanmod-x64$(./check_x86-64_psabi.sh|cut -d\"-\" -f3)\nrm check_x86-64_psabi.sh xanmod-repository.deb\n\n\n Cadence\n\nO Cadence é o programa responsável por gerenciar todas configurações de som do sistema, utilizando como base os programas JACK e PulseAudio.\n\nAtravés das configurações indicadas aqui, seu sistema estará preparado pra executar o áudio com baixa latência e bom desempenho.\n\n📦 Instalação\nwget -cq --show-progress http://ppa.launchpad.net/kxstudio-debian/kxstudio/ubuntu/pool/main/k/kxstudio-repos/\"$(wget -qO- http://ppa.launchpad.net/kxstudio-debian/kxstudio/ubuntu/pool/main/k/kxstudio-repos/|grep all.deb|tail -n1|cut -d '\"' -f8)\"\nsudo apt install ./kxstudio-repos*.deb\nsudo add-apt-repository -ny multiverse\nsudo add-apt-repository -y universe\necho 'jackd2 jackd/tweak_rt_limits string true'|sudo debconf-set-selections\nsudo apt install alsa-firmware cadence pulseaudio\nsudo apt autoremove --purge qjackctl meterbridge\nsystemctl --user mask pipewire.service pipewire.socket\nsystemctl --user --now stop pipewire.service pipewire.socket\nsystemctl --user --now disable pipewire.service pipewire.socket\nsystemctl --user --now enable pulseaudio.service pulseaudio.socket\nsystemctl --user --now start pulseaudio.service pulseaudio.socket\npactl info|grep \"Nome do servidor\"\nrm kxstudio-repos*.deb\n\n\n🔧 Configuração\n\n  As configurações recomendadas para o Cadence podem variar um pouco de acordo com o seu hardware, vou deixar aqui configurações que funcionam bem na maioria dos hardwares atuais.\n\n\n\n\n\n\n\n  Caso você tenha baixo desempenho ou artefatos sonoros, procure alterar o valor Periods/Buffer na aba Driver, pela minha experiência, esse valor não tem um padrão claro, cada hardware precisa de um valor específico.\n\n\n WINE TkG\n\nO WINE é o programa responsável por disponibilizar uma camada de compatibilidade para a execução de programas do Windows no Linux, a versão TkG é compilada utilizando patches específicos para um maior desempenho, em especial o patch FSYNC.\n\n\n\n📦 Instalação\nsudo dpkg --add-architecture i386\nsudo apt update\nsudo apt install q4wine wine wine32:i386 winetricks\nwget -q --show-progress \"$(wget -qO- https://api.github.com/repos/Kron4ek/Wine-Builds/releases|grep browser_download_url|grep staging-tkg-amd64.tar.xz|head -n1|cut -d '\"' -f4)\"\ntar fx wine*staging-tkg-amd64.tar.xz\nrm wine*staging-tkg-amd64.tar.xz\nsudo mv wine*staging-tkg-amd64 /opt/wine-tkg\nwget -q --show-progress \"$(wget -qO- https://api.github.com/repos/GloriousEggroll/wine-ge-custom/releases|grep browser_download_url|grep wine-lutris-ge|grep .tar.xz|head -n1|cut -d '\"' -f4)\"\ntar fx wine-lutris-ge*.tar.xz\nsudo cp lutris*/lib/wine/i386-windows/winemenubuilder.exe /opt/wine-tkg/lib/wine/i386-windows/winemenubuilder.exe\nsudo cp lutris*/lib64/wine/x86_64-windows/winemenubuilder.exe /opt/wine-tkg/lib/wine/x86_64-windows/winemenubuilder.exe\nfind . -name \"*lutris-ge*\" -print0|xargs -0 rm -r\nWINE_GECKO_VER=\"$(wget -qO- https://dl.winehq.org/wine/wine-gecko/|grep folder|cut -d '\"' -f6|sort -d|grep -v wine|tail -n1)\"\nwget -qO- https://dl.winehq.org/wine/wine-gecko/\"$WINE_GECKO_VER\"|grep x86|grep tar|grep -wv pdb|grep -wv rc|cut -d '\"' -f6&gt;wine-gecko.links\nsed -i 's@wine-gecko@https://dl.winehq.org/wine/wine-gecko/wine-gecko@g' wine-gecko.links\nsed -i 's@wine/wine-gecko/@'wine/wine-gecko/\"$WINE_GECKO_VER\"'@g' wine-gecko.links\nwget -q --show-progress \"$(cat&lt;wine-gecko.links|head -n1)\"\nwget -q --show-progress \"$(cat&lt;wine-gecko.links|tail -n1)\"\nrm wine-gecko.links\nWINE_MONO_VER=\"$(wget -qO- https://dl.winehq.org/wine/wine-mono/|grep folder|cut -d '\"' -f6|sort -g|tail -n1)\"\nwget -qO- https://dl.winehq.org/wine/wine-mono/\"$WINE_MONO_VER\"|grep x86|grep tar|cut -d '\"' -f6&gt;wine-mono.links\nsed -i 's@wine-mono@https://dl.winehq.org/wine/wine-mono/wine-mono@g' wine-mono.links\nsed -i 's@wine/wine-mono/@'wine/wine-mono/\"$WINE_MONO_VER\"'@g' wine-mono.links\nwget -q --show-progress \"$(cat&lt;wine-mono.links|head -n1)\"\nrm wine-mono.links\nsudo mkdir -p /opt/wine-tkg/share/wine/{gecko,mono}\nsudo tar fx wine-gecko-*-x86.tar.xz -C /opt/wine-tkg/share/wine/gecko/\nsudo tar fx wine-gecko-*-x86_64.tar.xz -C /opt/wine-tkg/share/wine/gecko/\nsudo tar fx wine-mono-*-x86.tar.xz -C /opt/wine-tkg/share/wine/mono/\nrm -r wine-gecko-*-x86.tar.xz\nrm -r wine-gecko-*-x86_64.tar.xz\nrm -r wine-mono-*-x86.tar.xz\ncat &lt;&lt;EOF |sudo tee /etc/environment.d/99wine.conf&gt;/dev/null\nif [ -d \"/opt/wine-tkg/bin\" ] ; then\n    PATH=\"/opt/wine-tkg/bin:\\$PATH\"\nfi\nexport WINE_ENABLE_PIPE_SYNC_FOR_APP=1\nexport WINEESYNC=1\nexport WINEFSYNC=1\nEOF\n\n\n🔧 Configuração\nwinetricks -f -q dxvk\n\n\n yabrige\n\nO yabridge é o programa responsável por criar links simbólicos dos plugins VST do Windows, que podem ser lidos pelos programas de áudio nativos do Linux, como REAPER, Waveform, Bitwig, entre outros.\n\nEle é compatível com plugins VST2 e VST3 de 32 e 64 bits.\n\n📦 Instalação\nwget -q --show-progress \"$(wget -qO- https://api.github.com/repos/robbert-vdh/yabridge/releases|grep browser_download_url|head -n2|tail -n1|cut -d '\"' -f4)\"\ntar fxz yabridge*.tar.gz\nrm -r yabridge*.tar.gz\nsudo mv yabridge/yabridgectl /usr/bin/yabridgectl\nsudo mv yabridge/libyabridge* /usr/lib/\nsudo mv yabridge/yabridge* /usr/bin/\nrm -r yabridge\n\n\n🔧 Configuração\nmkdir -pv \"$HOME\"/.wine/drive_c/Program\\ Files/Common\\ Files/VST3\nmkdir -pv \"$HOME\"/.wine/drive_c/Program\\ Files/VSTPlugins\nyabridgectl add \"$HOME\"/.wine/drive_c/Program\\ Files/Common\\ Files/VST3\nyabridgectl add \"$HOME\"/.wine/drive_c/Program\\ Files/VSTPlugins\nyabridgectl sync --prune --verbose\n\n\n REAPER\n\nO REAPER é uma estação de trabalho de áudio digital, com o qual você pode produzir música, editar áudio, editar vídeo (de maneira básica) e fazer apresentações musicais ao vivo.\n\n\n\nOs comandos indicados aqui incluem a instalação do ReaPack e da extensão SWS, além da tradução para o português brasileiro.\n\n📦 Instalação\nREAPER_VER=\"$(wget -qO- http://reaper.fm| grep VERSION|cut -d '&gt;' -f2|cut -d ':' -f1|sed 's/VERSION //g')\"\ncd /tmp\nrm -rf /tmp/*reaper* /tmp/*libSwell*\nwget -q --show-progress http://reaper.fm/\"$(wget -qO- http://reaper.fm/download.php|grep _linux_x86_64.tar.xz|cut -d '\"' -f2)\"\ntar fx reaper*_linux_x86_64.tar.xz -C /tmp\nsed -i 's/rmdir --/rm -rf --/g' /tmp/reaper*/install-reaper.sh\nsudo /tmp/reaper*/install-reaper.sh --install /opt --integrate-desktop --quiet --integrate-sys-desktop\nwget -qO libSwell.colortheme https://stash.reaper.fm/41334/libSwell.colortheme\nsudo mv libSwell.colortheme /opt/REAPER/libSwell.colortheme\ncd ..\ncat &lt;&lt;EOF |sudo tee -a /usr/share/applications/cockos-reaper.desktop&gt;/dev/null\n#\\n\nActions=NewProject;ShowAudioConfig;ReaMote;WhatsNew;License;\n[Desktop Action NewProject]\nName=REAPER (create new project)\nName[pt_BR]=REAPER (criar novo projeto)\nExec=/opt/REAPER/reaper -new\nIcon=cockos-reaper\n[Desktop Action ShowAudioConfig]\nName=REAPER (show audio configuration on startup)\nName[pt_BR]=REAPER (mostrar configurações de áudio ao iniciar)\nExec=/opt/REAPER/reaper -audiocfg\nIcon=cockos-reaper\n[Desktop Action ReaMote]\nName=ReaMote\nExec=/opt/REAPER/reamote-server\nIcon=folder-remote\n[Desktop Action WhatsNew]\nName=What's new\nName[pt_BR]=O que há de novo?\nExec=xdg-open /opt/REAPER/whatsnew.txt\nIcon=text-x-plain\n[Desktop Action License]\nName=License and User Agreement\nName[pt_BR]=Licença e contrato de usuário\nExec=xdg-open /opt/REAPER/EULA.txt\nIcon=text-x-plain\nEOF\n\n\n🔧 Configuração\nmkdir -pv \"$HOME\"/.config/REAPER/{LangPack,UserPlugins}\nwget -O \"$HOME\"/.config/REAPER/LangPack/pt-BR.ReaperLangPack https://stash.reaper.fm\"$(wget -qO- https://stash.reaper.fm/tag/Language-Packs|grep pt-BR|head -n1|cut -d '\"' -f2|sed 's/\\/v//g')\"\nwget https://sws-extension.org/download/pre-release/\"$(wget -qO- http://sws-extension.org/download/pre-release/|grep Linux-x86_64|head -n1|cut -d '\"' -f4)\"\ntar fvx sws-*-Linux-x86_64-*.tar.xz -C \"$HOME\"/.config/REAPER\nrm -rfv sws-*-Linux-x86_64-*.tar.xz\nwget -O \"$HOME\"/.config/REAPER/UserPlugins/reaper_reapack-x86_64.so \"$(wget -qO- https://api.github.com/repos/cfillion/reapack/releases|grep browser_download_url|grep download/v|grep x86_64.so|head -n1|cut -d '\"' -f4)\"\n\n\n Boas práticas para evitar xruns\n Desative conexões sem fio(wifi e bluetooth)\nConexões sem fio, sabidamente causam xruns esporádicos.\n\nAlguns notebooks tem um botão físico para desativar a conexão sem fio, se esse não for o seu caso, você pode desativar através do gerenciador de rede na área de notificação do seu ambiente gráfico.\n\n\n\n Evite a conversão de arquivos de áudio em tempo real\n\nMuitos programas de gravação de áudio, como é o caso do REAPER, por exemplo, permitem que você importe arquivos em formatos diferentes pra dentro do projeto, fazendo a conversão desses formatos em tempo real, durante a reprodução do projeto, isso gera uma sobrecarga de processamento e sabidamente pode causar xruns.\n\nQuando você estiver usando um programa de gravação de áudio, é recomendado evitar a conversão de arquivos de áudio em tempo real, ou seja, faça a conversão prévia de quaisquer arquivos que precisa usar no seu projeto, evitando sobrecarga no processamento durante a execução desses arquivos dentro do seu programa de gravação.\n\nPara checar os formatos dos arquivos, você pode usar o programa MediaInfo, que pode ser facilmente instalado através do comando indicado abaixo.\n\n📦 Instalação\nsudo apt install mediainfo-gui\n\n\n\n\nPara converter os arquivos de áudio, vídeo e imagem em outros formatos, você pode usar o programa Videomass, que pode ser facilmente instalado através dos comandos indicados abaixo.\n\n📦 Instalação\nsudo apt-add-repository ppa:jeanslack/videomass\nsudo apt install --no-install-recommends yt-dlp\nsudo apt install python3-videomass\n\n\n\n\nSe você gostou do conteúdo desta postagem e quer receber mais conteúdos como esse, me siga no Twitter.\n",
    "cover": null
  },
  
  {
    "title": "This post demonstrates post content styles",
    "url": "/junk/2016/05/20/this-post-demonstrates-post-content-styles.html",
    "date": "20/05/2016",
    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt. Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit.\n\nSome great heading (h2)\n\nProin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum. In arcu magna, aliquet vel pretium et, molestie et arcu.\n\nMauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.\n\nAnother great heading (h2)\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt. Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit.\n\nSome great subheading (h3)\n\nProin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum. In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum.\n\nPhasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc.\n\nSome great subheading (h3)\n\nPraesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.\n\n\n  This quote will change your life. It will reveal the secrets of the universe, and all the wonders of humanity. Don’t misuse it.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt.\n\nSome great subheading (h3)\n\nVestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit. Proin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum.\n\n&lt;html&gt;\n  &lt;head&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;Hello, World!&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\nYou might want a sub-subheading (h4)\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\nBut it’s probably overkill (h4)\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\nCould be a smaller sub-heading, pacman (h5)\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\nSmall yet significant sub-heading  (h6)\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\nWhaaat, a checklist??\n\n\n  Milk\n  Cookies\n    \n      Classic Choco-chip\n      Sourdough Choco-chip\n    \n  \n  Chee-ee-eeee-zzze!!!!\n\n\nOh hai, an unordered list!!\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\n\n  First item, yo\n  Second item, dawg\n  Third item, what what?!\n  Fourth item, fo sheezy my neezy\n  Fifth item, nested!\n    \n      So la ti do\n      Ba-da-bing!\n      Ba-da-boom!\n    \n  \n\n\nOh hai, an ordered list!!\n\nIn arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.\n\n\n  First item, yo\n  Second item, dawg\n  Third item, what what?!\n  Fourth item, fo sheezy my neezy\n  Fifth item, nested!\n    \n      So la ti do\n      Ba-da-bing!\n      Ba-da-boom!\n    \n  \n\n\nHeadings are cool! (h2)\n\nProin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.\n\nPraesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.\n\nProin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc.\n\nTables\n\n\n  \n    \n      Title 1\n      Title 2\n      Title 3\n      Title 4\n    \n  \n  \n    \n      lorem\n      lorem ipsum\n      lorem ipsum dolor\n      lorem ipsum dolor sit\n    \n    \n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n    \n    \n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n    \n    \n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit\n    \n  \n\n\n\n  \n    \n      Title 1\n      Title 2\n      Title 3\n      Title 4\n    \n  \n  \n    \n      lorem\n      lorem ipsum\n      lorem ipsum dolor\n      lorem ipsum dolor sit\n    \n    \n      lorem ipsum dolor sit amet\n      lorem ipsum dolor sit amet consectetur\n      lorem ipsum dolor sit amet\n      lorem ipsum dolor sit\n    \n    \n      lorem ipsum dolor\n      lorem ipsum\n      lorem\n      lorem ipsum\n    \n    \n      lorem ipsum dolor\n      lorem ipsum dolor sit\n      lorem ipsum dolor sit amet\n      lorem ipsum dolor sit amet consectetur\n    \n  \n\n",
    "cover": "https://wallpapers.com/images/featured/content-pictures-9ic0u05ncup02t1e.jpg"
  },
  
  {
    "title": "Some articles are just so long they deserve a really long title to see if things will break well",
    "url": "/misc/2016/05/20/super-long-article.html",
    "date": "20/05/2016",
    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt. Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit. Proin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum. In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt. Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit. Proin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum. In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt. Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit. Proin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum. In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.\n",
    "cover": "https://wallpapers.com/images/hd/a-serene-1920x1080-hd-image-of-fresh-morning-in-a-lush-forest-ysb8tfaoajpfkghj.jpg"
  },
  
  {
    "title": "My Example Post",
    "url": "/2016/05/20/my-example-post.html",
    "date": "20/05/2016",
    "content": "Eos eu docendi tractatos sapientem, brute option menandri in vix, quando vivendo accommodare te ius. Nec melius fastidii constituam id, viderer theophrastus ad sit, hinc semper periculis cum id. Noluisse postulant assentior est in, no choro sadipscing repudiandae vix. Vis in euismod delenit dignissim. Ex quod nostrum sit, suas decore animal id ius, nobis solet detracto quo te.\n\nNo laudem altera adolescens has, volumus lucilius eum no. Eam ei nulla audiam efficiantur. Suas affert per no, ei tale nibh sea. Sea ne magna harum, in denique scriptorem sea, cetero alienum tibique ei eos. Labores persequeris referrentur eos ei.\n",
    "cover": "https://quickframe.com/wp-content/uploads/2022/06/SEOBlog_QF_VideoPostProduction_Blog_1920x1080.jpg"
  },
  
  {
    "title": "Some articles are just so short that we have to make the footer stick",
    "url": "/misc/2016/05/19/super-short-article.html",
    "date": "19/05/2016",
    "content": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n",
    "cover": "https://www.executiveautomats.com/hubfs/EAhow-to-cut-down-on-microsoft-dynamics-365-security-roles-a-quick-guide-1.webp"
  },
  
  {
    "title": "Codeblocks Ahoy",
    "url": "/2016/05/19/codeblocks-ahoy.html",
    "date": "19/05/2016",
    "content": "An article with various blocks of highlighted code snippets.\n\n=begin\n  Dummy class nested inside a dummy module\n  Private API\n=end\n\n- This line is redacted\n- This line has been deleted\n+ This line is visible\n+ This line has been inserted\nThis line has not been changed\n\n@import \"base\"\n\n.card\n  display: inline-block\n  margin: 0\n  padding: 0\n\n  &amp;:hover\n    color: #ab45ef;\n\n21 + 54 = 0\nfoo ||= bar\nfoo / bar\n\n24\n45.75\n0x2C716\n\\x0A\n01010\n\n/ya?ml/\n\"yaml\"\n\ninclude Enumerable\n\nmodule Foo\n  class Bar\n    LIPSUM = \"lorem ipsum dolor sit\"\n\n    attr_reader :layout\n\n    def initialize\n      @layout = Layout.new\n    end\n\n    # instance method\n    def profile\n      measure_time do\n        compile layout\n        layout.render_with Bar::LIPSUM\n      end\n    rescue ArgumentError\n      false\n    end\n  end\nend\n\n# Execute code\nFoo::Bar.new.profile\n\n\n{% assign foo = page.foo | bar: 'baz' %}\n{{ foo }}\n\n\nauthor:\n  admin: true\n  name: John Doe\n  email: johndoe@example.com\n  id: 75636474\n\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Hello World&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;Hello, World!&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Hello World&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;Hello, World!&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Hello World&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;Hello, World!&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Hello World&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;Hello, World!&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n\n\n",
    "cover": "https://cdn.neowin.com/news/images/uploaded/2025/04/1744657733_programming_language_depiction.jpg"
  }
  
]